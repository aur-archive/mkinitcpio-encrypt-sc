# vim: set ft=sh:

install ()
{
    if [ -z "${CRYPTO_MODULES}" ]; then
        MODULES=" dm-crypt $(all_modules "/crypto/") "
    else
        MODULES=" dm-crypt ${CRYPTO_MODULES} "
    fi
    add_dir "/dev/mapper"
    add_dir "/var/run/openct"
    [ -f "/sbin/cryptsetup" ] && add_binary "/sbin/cryptsetup" "/sbin/cryptsetup"
    [ -f "/usr/sbin/cryptsetup" ] && add_binary "/usr/sbin/cryptsetup" "/sbin/cryptsetup"
    add_binary "/sbin/dmsetup"
    add_file "/lib/initcpio/sc/opensc.conf" "/etc/opensc.conf"
    add_file "/lib/initcpio/sc/openct.conf" "/etc/openct.conf"
    add_file "/lib/initcpio/sc/ifdhandler" "/sbin/ifdhandler"
    add_file "/lib/initcpio/sc/openct-control" "/sbin/openct-control"
    add_file "/lib/initcpio/sc/pkcs15-tool" "/sbin/pkcs15-tool"
    add_file "/lib/initcpio/sc/95-openct.rules" "/lib/udev/rules.d/95-openct.rules"
    add_file "/lib/initcpio/sc/openct_pcmcia" "/lib/udev/openct_pcmcia"
    add_file "/lib/initcpio/sc/openct_serial" "/lib/udev/openct_serial"
    add_file "/lib/initcpio/sc/openct_usb" "/lib/udev/openct_usb"
    FILES=""
    SCRIPT="encrypt_sc"
}

help ()
{
cat<<HELPEOF
  This hook allows for an encrypted root device with a smart card support.
HELPEOF
}
